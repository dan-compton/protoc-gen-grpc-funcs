// Code initially generated by protoc-gen-grpc-impl
package examples

import (
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"

	"context"
)

// ExampleServiceImplementation is an implementation of the grpc-defined type, ExampleService.
// Its members are functions which implement the defined rpc endpoints.
type ExampleServiceImplementation struct {
	EchoMethod func(ctx context.Context, input *InputMessage) (*OutputMessage, error)

	EchoStreamOutMethod func(input *InputMessage, stream ExampleService_EchoStreamOutServer) error

	EchoStreamInMethod func(stream ExampleService_EchoStreamInServer) error

	EchoStreamInOutMethod func(stream ExampleService_EchoStreamInOutServer) error
}

// Echo calls the provided implementation, EchoMethod.
func (t *ExampleServiceImplementation) Echo(ctx context.Context, input *InputMessage) (*OutputMessage, error) {
	return t.EchoMethod(ctx, input)
}

// EchoStreamOut calls the provided implementation, EchoStreamOutMethod.
func (t *ExampleServiceImplementation) EchoStreamOut(input *InputMessage, stream ExampleService_EchoStreamOutServer) error {
	return t.EchoStreamOutMethod(input, stream)
}

// EchoStreamIn calls the provided implementation, EchoStreamInMethod.
func (t *ExampleServiceImplementation) EchoStreamIn(stream ExampleService_EchoStreamInServer) error {
	return t.EchoStreamInMethod(stream)
}

// EchoStreamInOut calls the provided implementation, EchoStreamInOutMethod.
func (t *ExampleServiceImplementation) EchoStreamInOut(stream ExampleService_EchoStreamInOutServer) error {
	return t.EchoStreamInOutMethod(stream)
}

// Register associates the implementation with a grpc server.
func (t *ExampleServiceImplementation) Register(srv *grpc.Server) {
	RegisterExampleServiceServer(srv, t)
}

// NewExampleServiceImplementation creates an instance of ExampleService with unimplemented method stubs.
// NOTE: you should provide your own functions which implement the underlying methods.
func NewExampleServiceImplementation() *ExampleServiceImplementation {
	var t = new(ExampleServiceImplementation)

	t.EchoMethod = func(ctx context.Context, input *InputMessage) (*OutputMessage, error) {
		return nil, status.Errorf(codes.Unimplemented, "Echo has not been implemented")
	}

	t.EchoStreamOutMethod = func(input *InputMessage, stream ExampleService_EchoStreamOutServer) error {
		return status.Errorf(codes.Unimplemented, "EchoStreamOut has not been implemented")
	}

	t.EchoStreamInMethod = func(stream ExampleService_EchoStreamInServer) error {
		return status.Errorf(codes.Unimplemented, "EchoStreamIn has not been implemented")
	}

	t.EchoStreamInOutMethod = func(stream ExampleService_EchoStreamInOutServer) error {
		return status.Errorf(codes.Unimplemented, "EchoStreamInOut has not been implemented")
	}

	return t
}
